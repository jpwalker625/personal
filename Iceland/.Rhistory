pal <- brewer.pal(n = 9, name = 'PuBuGn')
p <- ggplot(overall_sentiment, aes(x = sentiment, y = Frequency))
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- brewer.pal(name = 'PuBuGn')
pal <- brewer.pal(n = 15,name = 'PuBuGn')
p <- ggplot(overall_sentiment, aes(x = sentiment, y = Frequency))
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- brewer.pal(n = 9,name = 'PRGn')
p <- ggplot(overall_sentiment, aes(x = sentiment, y = Frequency))
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- brewer.pal(n = 9,name = 'Pastel1')
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- brewer.pal(n = 9,name = 'Set1')
pal <- brewer.pal(n = 9,name = 'Set1')
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- brewer.pal(n = 9,name = 'Set1')
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- brewer.pal(n = 9,name = 'Accent')
pal <- brewer.pal(n = 9,name = 'Paired')
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- rainbow(n = 9,start = 0, end = 5/6)
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- rainbow(n = 5,start = 0, end = 5/6)
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- rainbow(n = 9,start = 0, end = 4/6)
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
pal <- brewer.pal(n = 9, name = 'Set3')
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values")
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark()
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_gray()
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_bw()
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_classic()
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark()
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 10)
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 12)
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 18)
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 18,base_family = 'tempis_sans')
fonts
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 18,base_family = 'CenturySch')
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 18,base_family = 'Courier')
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 18,base_family = 'Times')
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 18,base_family = Times)
options(out.width = 2000dpx, dpi = 200)
options(out.width = 2000px, dpi = 200)
options(out.width = '2000px', dpi = 200)
options(out.width = '2000dpx', dpi = 200)
options(out.width = '2000', dpi = 200)
p <- ggplot(overall_sentiment, aes(x = sentiment, y = Frequency))
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 18)
options(out.width = '130%')
options(out.width = '200%',dpi = 500)
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(base_size = 18)
opts_chunk$set(out.width = '2000%',dpi = 500)
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(axis.text.x = element_text(angle = 45, hjust = 1))
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_dark()
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark(axis.text.x = element_text(angle = 45, hjust = 1))
p + geom_bar(stat = 'identity', aes(fill = sentiment)) +
facet_grid(searchstring~.) +
labs(title = 'Emotional Valence of Political Tweets', x = 'Sentiment', y = 'Frequency') +
scale_fill_manual(values = pal,name = "Sentiment Values") +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pal <- rainbow(start = 4/6 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 5/6 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 3/6 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
set.seed(123)
pal <- rainbow(start = 3/6 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 3/7 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 3/10 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 3/4 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 2/6 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 2/6 , end = 0, n = 25)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 2/6 , end = 0, n = 100)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 2/9 , end = 0, n = 100)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 2/3 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = 2/4.5 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
pal <- rainbow(start = .55 , end = 0, n = 50)
wordcloud(words = head(wf$words,100)
,freq = head(wf$freq,100)
,scale = c(4,.5)
,random.order = FALSE
,random.color = FALSE
,colors = pal
,rot.per = .35)
View(no_retweets)
political_tweets <- searchTwitteR(searchString = "#election",n = 5000,retryOnRateLimit = 9999, cainfo = "cacert.pem")
setup_twitter_oauth()
consumer_key <- 'PXcnB9IY0RLTqUAmt4SLodPIF'
consumer_secret <- 'W7Iupzw8926lnklNYHqaLaRMxGCeFl5IoVweuq3R9vtKsmAMFh'
access_token <- '796792938441285632-aRHkns6110ZSSG966n5VVYbTdmJ0vgo'
access_secret <- 	'dMKd45i8OKdOqAuPmmjVYwq2CtbzIWPcr0MhZnywt28Ky'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
political_tweets <- searchTwitteR(searchString = "#election",n = 5000,retryOnRateLimit = 9999, cainfo = "cacert.pem")
political_tweets <- searchTwitteR(searchString = "#election",n = 25000,retryOnRateLimit = 9999)
political_tweets <- searchTwitteR(searchString = "#election",n = 5000,retryOnRateLimit = 9999)
political_tweets <- searchTwitteR(searchString = "#election",n = 5000, since = "2016-06-01",retryOnRateLimit = 9999)
consumer_key <- 'JNtENMgqGM9iVydvseQ1Md597'
consumer_secret <- 'qeXhX7pOGpL1kLKwbA6dZNE5GqrnfDSmjnKYOieA9BQJQXhQNX'
access_token <- '796792938441285632-aRHkns6110ZSSG966n5VVYbTdmJ0vgo'
access_secret <- 	'MKd45i8OKdOqAuPmmjVYwq2CtbzIWPcr0MhZnywt28Ky'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
political_tweets <- searchTwitteR(searchString = "#election",n = 5000, since = "2016-06-01",retryOnRateLimit = 9999)
political_tweets <- searchTwitteR(searchString = "#election",n = 5000, since = "2016-06-01",retryOnRateLimit = 9999)
consumer_key <- 'JNtENMgqGM9iVydvseQ1Md597'
consumer_secret <- 'qeXhX7pOGpL1kLKwbA6dZNE5GqrnfDSmjnKYOieA9BQJQXhQNX'
access_token <- '796792938441285632-aRHkns6110ZSSG966n5VVYbTdmJ0vgo'
access_secret <- 	'MKd45i8OKdOqAuPmmjVYwq2CtbzIWPcr0MhZnywt28Ky'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setwd("C:/workspace/UCB_R")
setwd("C:/workspace")
load(".httr-oauth")
consumer_key <- 'JNtENMgqGM9iVydvseQ1Md597'
consumer_secret <- 'qeXhX7pOGpL1kLKwbA6dZNE5GqrnfDSmjnKYOieA9BQJQXhQNX'
access_token <- '796792938441285632-aRHkns6110ZSSG966n5VVYbTdmJ0vgo'
access_secret <- 	'MKd45i8OKdOqAuPmmjVYwq2CtbzIWPcr0MhZnywt28Ky'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
library(twitteR)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
political_tweets <- searchTwitteR(searchString = "#election",n = 5000, since = "2016-06-01",retryOnRateLimit = 9999)
library(twitteR)
consumer_key <- '	0rbSt25bvbViIzGCOq4hZqjWV'
consumer_secret <- '4sAH12ggmU4RG5RdHt2pyjE38w0Tsd1BfgdOp8Z8W2HSQT2OGG'
access_token <- '796792938441285632-aRHkns6110ZSSG966n5VVYbTdmJ0vgo'
access_secret <- 	'dMKd45i8OKdOqAuPmmjVYwq2CtbzIWPcr0MhZnywt28Ky'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
searchTwitter("hillary")
j <- searchTwitter("hillary")
values <- c(1,5,6,NA)
mean(values)
mean(vaalues,na.rm = TRUE)
mean(values,na.rm = TRUE)
sd(values, na.rm = TRUE)
var(values, na.rm = TRUE)
values <- (1,5,6)
values <- c(1,5,6)
sd(values)
variance(values)
var(values)
values
install.packages(c("acepack", "BH", "ca", "car", "chron", "cluster", "codetools", "colorspace", "covr", "crayon", "curl", "data.table", "digest", "effects", "evaluate", "foreign", "formatR", "FunChisq", "ggplot2", "git2r", "heplots", "highr", "Hmisc", "htmlwidgets", "hunspell", "irlba", "jsonlite", "knitr", "lattice", "lazyeval", "lme4", "maps", "maptools", "Matrix", "mgcv", "mime", "multcomp", "openssl", "plotrix", "plyr", "proto", "quantreg", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "reshape2", "Rfacebook", "rgl", "rmarkdown", "RODBC", "rsconnect", "RSelenium", "RSQLite", "scales", "scatterplot3d", "shiny", "slam", "SparseM", "stringdist", "stringi", "stringr", "survey", "survival", "swirl", "tables", "testthat", "tidyr", "ucminf", "XML", "yaml", "zoo"))
class(info)
args(lapply)
mydate <- as.Date("1900-01-01")
unclass(mydate)
Sys.Date()
my_date <- "1970-01-01"
class(my_date)
my_date <- as.Date(my_date)
my_date
class(my_date)
my_date-Sys.Date()
unclass(sys.Date)
unclass(Sys.Date)
unclass(my_date)
seq_along(1:10)
?seq_along
seq_len(17)
seq_along(17)
seq_along(1:17
seq_along(1:17
)
seq_along(1:17)
seq(17)
x <- c(1,2,NA,3,NA,4,5)
x
replace_missing <- function(x, replacement){
is_miss <- is.na(x)
x[is_miss] <- replacement
message(x)
}
replace_missing(x,0)
x[is_miss]
replace_missing <- function(x, replacement){
is_miss <- is.na(x)
x[is_miss] <- replacement
x
}
replace_missing(x,0)
is.na(x)
x[is.na(x)]
x[is.na(x)] <- 2
x
mean()
mean
UseMethod("mean")
x <- (1, 2, NA, 3, 4, NA, 5)
x <- c(1, 2, NA, 3, 4, NA, 5)
mean(x)
mean(x, na.rm = TRUE)
sum(x)
length(x)
length(x, na.rm = TRUE)
denominator <- length(x) - length(is.na(x))
recreate_mean <- function(x){
denominator <- length(x) - length(is.na(x))
sum(x, na.rm = TRUE) / denominator
return(x)
}
recreate_mean(x)
recreate_mean <- function(x){
denominator <- length(x) - length(is.na(x))
avg <-sum(x, na.rm = TRUE) / denominator
return(avg)
}
recreate_mean(x)
length(x)
length(x) - length(is.na(x))
sum(is.na(x))
recreate_mean <- function(x){
denominator <- length(x) - sum(is.na(x))
avg <-sum(x, na.rm = TRUE) / denominator
return(avg)
}
recreate_mean(x)
mean(x, na.rm = TRUE)
y <- c(1,2,3,4,5)
recreate_mean(y)
library(forcats)
library(pander)
library(ggplot2)
library(pals)
library(ggthemes)
df <- read.csv("iceland_finances.csv")
df$Stage <- fct_recode(df$Stage, exclude = "Exclude", include = "Include")
df$Category <- fct_recode(df$Category, activity = "Activity", lodging = "Lodging", dining = "Dining",
merchandise = "Merchandise", travel = "Travel", 'gas/automotive' = "Gas/Automotive")
category_totals <- aggregate(list("Total.Cost" = df$Debit), by = list(Category = df$Category), sum)
type_totals <- aggregate(Debit ~ Category + Type, data = df, sum)
pander(category_totals)
setwd("~/Iceland")
library(forcats)
library(pander)
library(ggplot2)
library(pals)
library(ggthemes)
df <- read.csv("iceland_finances.csv")
df$Stage <- fct_recode(df$Stage, exclude = "Exclude", include = "Include")
df$Category <- fct_recode(df$Category, activity = "Activity", lodging = "Lodging", dining = "Dining",
merchandise = "Merchandise", travel = "Travel", 'gas/automotive' = "Gas/Automotive")
category_totals <- aggregate(list("Total.Cost" = df$Debit), by = list(Category = df$Category), sum)
type_totals <- aggregate(Debit ~ Category + Type, data = df, sum)
pander(category_totals)
library(forcats)
library(pander)
library(ggplot2)
library(pals)
library(ggthemes)
df <- read.csv("iceland_finances.csv")
df$Stage <- fct_recode(df$Stage, exclude = "Exclude", include = "Include")
df$Category <- fct_recode(df$Category, activity = "Activity", lodging = "Lodging", dining = "Dining",
merchandise = "Merchandise", travel = "Travel", 'gas/automotive' = "Gas/Automotive")
category_totals <- aggregate(list("Total.Cost" = df$Debit), by = list(Category = df$Category), sum)
type_totals <- aggregate(Debit ~ Category + Type, data = df, sum)
pander(category_totals)
kable(category_totals)
library(knitr)
kable(category_totals)
library(forcats)
library(pander)
library(knitr)
library(ggplot2)
library(pals)
library(ggthemes)
df <- read.csv("iceland_finances.csv")
df$Stage <- fct_recode(df$Stage, exclude = "Exclude", include = "Include")
df$Category <- fct_recode(df$Category, activity = "Activity", lodging = "Lodging", dining = "Dining",
merchandise = "Merchandise", travel = "Travel", 'gas/automotive' = "Gas/Automotive")
category_totals <- aggregate(list("Total.Cost" = df$Debit), by = list(Category = df$Category), sum)
type_totals <- aggregate(Debit ~ Category + Type, data = df, sum)
kable(category_totals)
***
kable(type_totals)
rmarkdown::shiny_prerendered_clean('~/Iceland/iceland presentation.Rpres')
my_pal <- pals::brewer.paired(26)
plot2 <- ggplot(type_totals, aes(Category, Debit, fill = Type, label = paste(Type, Debit, sep = "-"))) +
geom_bar(stat = 'identity') +
geom_text(data = type_totals, size = 3, position = position_stack(vjust = 0.5)) +
scale_fill_manual(values = my_pal) +
ggtitle("Iceland Vacation Expenses Breakdown") +
theme_economist_white() +
theme(axis.title = element_text(face = "bold"))
plot2
plot2
save.image(file = "category_totals", pander(category_totals))
save.image(file = "category_totals.png", pander(category_totals))
save.image(file = "category_totals.jpg", pander(category_totals))
save.image(file = "category_totals.jpg", print(pander(category_totals)))
save.image(file = "category_totals.jpg", print(pander(category_totals)))
my_pal <- pals::brewer.paired(26)
plot2 <- ggplot(type_totals, aes(Category, Debit, fill = Type, label = paste(Type, Debit, sep = "-"))) +
geom_bar(stat = 'identity') +
geom_text(data = type_totals, size = 3, position = position_stack(vjust = 0.5)) +
scale_fill_manual(values = my_pal) +
ggtitle("Iceland Vacation Expenses Breakdown") +
theme_economist_white() +
theme(axis.title = element_text(face = "bold"))
plot2
my_pal <- pals::brewer.paired(26)
plot2 <- ggplot(type_totals, aes(Category, Debit, fill = Type, label = paste(Type, Debit, sep = "-"))) +
geom_bar(stat = 'identity') +
geom_text(data = type_totals, size = 3, position = position_stack(vjust = 0.5)) +
scale_fill_manual(values = my_pal) +
ggtitle("Iceland Vacation Expenses Breakdown") +
theme_economist_white() +
theme(axis.title = element_text(face = "bold"))
plot2
